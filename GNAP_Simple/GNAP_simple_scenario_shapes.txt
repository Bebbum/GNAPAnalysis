(comment "CPSA 3.6.9")
(comment "Extracted shapes")

(herald "Grant Negotiation and Authorization Protocol" (limit 50)
  (comment
    "This protocol allows a piece of software, the client instance, to request delegated authorization to resource servers and to request direct information"))

(comment "CPSA 3.6.9")

(comment "All input read from GNAP_simple_scenario.scm")

(comment "Step count limited to 50")

(defprotocol single_token_simple basic
  (defrole client
    (vars (c as rs name) (access acess_token value rights response data)
      (n1 n2 text) (k akey))
    (trace (send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs))))))
  (defrole authorization_server
    (vars (c as name) (access acess_token value rights data) (n1 text)
      (k akey))
    (trace (recv (enc c access (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))))
  (defrole resource_server
    (vars (c rs name) (acess_token value rights response data) (n2 text)
      (k akey))
    (trace
      (recv
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs)))))))

(defskeleton single_token_simple
  (vars (n2 n1 text) (access acess_token value rights response data)
    (c as rs name) (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs))))))
  (label 0)
  (unrealized (0 1) (0 3))
  (origs (n2 (0 2)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton single_token_simple
  (vars (n2 n1 n1-0 n1-1 text)
    (access acess_token value rights response access-0 access-1 data)
    (c as rs as-0 c-0 as-1 name) (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (defstrand client 3 (n1 n1-0) (n2 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as-0) (rs as) (k k))
  (defstrand authorization_server 2 (n1 n1-1) (access access-1)
    (acess_token acess_token) (value value) (rights rights) (c c-0)
    (as as-1) (k k))
  (defstrand resource_server 2 (n2 n2) (acess_token acess_token)
    (value value) (rights rights) (response response) (c c) (rs rs)
    (k k))
  (precedes ((0 2) (3 0)) ((1 2) (0 1)) ((2 1) (1 1)) ((3 1) (0 3)))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 4 0 client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (3 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs)))))
    ((send (enc c access-0 (pubk c) (ltk c as-0)))
      (recv
        (enc n1-0 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as-0))))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv (enc c-0 access-1 (pubk c-0) (ltk c-0 as-1)))
      (send
        (enc n1-1 (enc acess_token value rights k)
          (cat (pubk c-0) (ltk c-0 as-1)))))
    ((recv
       (enc n2 (enc acess_token value rights k)
         (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs))))))
  (label 9)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 n1-0 n1-1 text)
    (access acess_token value rights response access-0 access-1 data)
    (c as as-0 c-0 as-1 name) (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs as) (k k))
  (defstrand client 3 (n1 n1-0) (n2 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as-0) (rs as) (k k))
  (defstrand authorization_server 2 (n1 n1-1) (access access-1)
    (acess_token acess_token) (value value) (rights rights) (c c-0)
    (as as-1) (k k))
  (defstrand resource_server 2 (n2 n1) (acess_token acess_token)
    (value value) (rights rights) (response response) (c c) (rs as)
    (k k))
  (precedes ((1 2) (0 1)) ((1 2) (3 0)) ((2 1) (1 1)) ((3 1) (0 3)))
  (non-orig (ltk c as) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 4 1 client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (3 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (recv (enc response (cat (pubk c) (ltk c as)))))
    ((send (enc c access-0 (pubk c) (ltk c as-0)))
      (recv
        (enc n1-0 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as-0))))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv (enc c-0 access-1 (pubk c-0) (ltk c-0 as-1)))
      (send
        (enc n1-1 (enc acess_token value rights k)
          (cat (pubk c-0) (ltk c-0 as-1)))))
    ((recv
       (enc n1 (enc acess_token value rights k)
         (cat (pubk c) (ltk c as))))
      (send (enc response (cat (pubk c) (ltk c as))))))
  (label 10)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs as) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 n1-0 n1-1 n2-0 n1-2 text)
    (access acess_token value rights response access-0 access-1
      acess_token-0 value-0 rights-0 access-2 data)
    (c as rs as-0 c-0 as-1 as-2 name) (k k-0 akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (defstrand client 3 (n1 n1-0) (n2 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as-0) (rs as) (k k))
  (defstrand authorization_server 2 (n1 n1-1) (access access-1)
    (acess_token acess_token) (value value) (rights rights) (c c-0)
    (as as-1) (k k))
  (defstrand resource_server 2 (n2 n2-0) (acess_token acess_token-0)
    (value value-0) (rights rights-0) (response response) (c c) (rs rs)
    (k k-0))
  (defstrand client 3 (n1 n1-2) (n2 n2-0) (access access-2)
    (acess_token acess_token-0) (value value-0) (rights rights-0) (c c)
    (as as-2) (rs rs) (k k-0))
  (precedes ((1 2) (0 1)) ((2 1) (1 1)) ((3 1) (0 3)) ((4 2) (3 0)))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (operation encryption-test (added-strand client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (3 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs)))))
    ((send (enc c access-0 (pubk c) (ltk c as-0)))
      (recv
        (enc n1-0 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as-0))))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv (enc c-0 access-1 (pubk c-0) (ltk c-0 as-1)))
      (send
        (enc n1-1 (enc acess_token value rights k)
          (cat (pubk c-0) (ltk c-0 as-1)))))
    ((recv
       (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
         (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs)))))
    ((send (enc c access-2 (pubk c) (ltk c as-2)))
      (recv
        (enc n1-2 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c as-2))))
      (send
        (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c rs))))))
  (label 11)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 text) (access acess_token value rights response data)
    (c as rs name) (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (defstrand authorization_server 2 (n1 n1) (access access)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as) (k k))
  (defstrand resource_server 2 (n2 n2) (acess_token acess_token)
    (value value) (rights rights) (response response) (c c) (rs rs)
    (k k))
  (precedes ((0 0) (1 0)) ((0 2) (2 0)) ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 3 0 client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (2 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs)))))
    ((recv (enc c access (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv
       (enc n2 (enc acess_token value rights k)
         (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs))))))
  (label 14)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 n2-0 n1-0 text)
    (access acess_token value rights response acess_token-0 value-0
      rights-0 access-0 data) (c as rs as-0 name) (k k-0 akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (defstrand authorization_server 2 (n1 n1) (access access)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as) (k k))
  (defstrand resource_server 2 (n2 n2-0) (acess_token acess_token-0)
    (value value-0) (rights rights-0) (response response) (c c) (rs rs)
    (k k-0))
  (defstrand client 3 (n1 n1-0) (n2 n2-0) (access access-0)
    (acess_token acess_token-0) (value value-0) (rights rights-0) (c c)
    (as as-0) (rs rs) (k k-0))
  (precedes ((0 0) (1 0)) ((1 1) (0 1)) ((2 1) (0 3)) ((3 2) (2 0)))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (operation encryption-test (added-strand client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (2 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs)))))
    ((recv (enc c access (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv
       (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
         (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs)))))
    ((send (enc c access-0 (pubk c) (ltk c as-0)))
      (recv
        (enc n1-0 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c as-0))))
      (send
        (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c rs))))))
  (label 15)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 text) (access acess_token value rights response data)
    (c as name) (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs as) (k k))
  (defstrand authorization_server 2 (n1 n1) (access access)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as) (k k))
  (defstrand resource_server 2 (n2 n1) (acess_token acess_token)
    (value value) (rights rights) (response response) (c c) (rs as)
    (k k))
  (precedes ((0 0) (1 0)) ((1 1) (0 1)) ((1 1) (2 0)) ((2 1) (0 3)))
  (non-orig (ltk c as) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 3 1 authorization_server 2)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (2 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (recv (enc response (cat (pubk c) (ltk c as)))))
    ((recv (enc c access (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv
       (enc n1 (enc acess_token value rights k)
         (cat (pubk c) (ltk c as))))
      (send (enc response (cat (pubk c) (ltk c as))))))
  (label 16)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs as) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 text)
    (access acess_token value rights response access-0 data)
    (c as rs name) (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (defstrand authorization_server 2 (n1 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as) (k k))
  (defstrand client 1 (access access-0) (c c) (as as))
  (defstrand resource_server 2 (n2 n2) (acess_token acess_token)
    (value value) (rights rights) (response response) (c c) (rs rs)
    (k k))
  (precedes ((0 2) (3 0)) ((1 1) (0 1)) ((2 0) (1 0)) ((3 1) (0 3)))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 4 0 client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (3 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs)))))
    ((recv (enc c access-0 (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((send (enc c access-0 (pubk c) (ltk c as))))
    ((recv
       (enc n2 (enc acess_token value rights k)
         (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs))))))
  (label 18)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 n2-0 n1-0 text)
    (access acess_token value rights response access-0 acess_token-0
      value-0 rights-0 access-1 data) (c as rs as-0 name) (k k-0 akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs rs) (k k))
  (defstrand authorization_server 2 (n1 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as) (k k))
  (defstrand client 1 (access access-0) (c c) (as as))
  (defstrand resource_server 2 (n2 n2-0) (acess_token acess_token-0)
    (value value-0) (rights rights-0) (response response) (c c) (rs rs)
    (k k-0))
  (defstrand client 3 (n1 n1-0) (n2 n2-0) (access access-1)
    (acess_token acess_token-0) (value value-0) (rights rights-0) (c c)
    (as as-0) (rs rs) (k k-0))
  (precedes ((1 1) (0 1)) ((2 0) (1 0)) ((3 1) (0 3)) ((4 2) (3 0)))
  (non-orig (ltk c as) (ltk c rs) k)
  (uniq-orig n2)
  (operation encryption-test (added-strand client 3)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (3 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c rs))))
      (recv (enc response (cat (pubk c) (ltk c rs)))))
    ((recv (enc c access-0 (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((send (enc c access-0 (pubk c) (ltk c as))))
    ((recv
       (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
         (cat (pubk c) (ltk c rs))))
      (send (enc response (cat (pubk c) (ltk c rs)))))
    ((send (enc c access-1 (pubk c) (ltk c as-0)))
      (recv
        (enc n1-0 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c as-0))))
      (send
        (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c rs))))))
  (label 20)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 text)
    (access acess_token value rights response access-0 data) (c as name)
    (k akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs as) (k k))
  (defstrand authorization_server 2 (n1 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as) (k k))
  (defstrand client 1 (access access-0) (c c) (as as))
  (defstrand resource_server 2 (n2 n1) (acess_token acess_token)
    (value value) (rights rights) (response response) (c c) (rs as)
    (k k))
  (precedes ((1 1) (0 1)) ((1 1) (3 0)) ((2 0) (1 0)) ((3 1) (0 3)))
  (non-orig (ltk c as) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 4 1 authorization_server 2)
    (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
      (cat (pubk c) (ltk c rs))) (3 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (recv (enc response (cat (pubk c) (ltk c as)))))
    ((recv (enc c access-0 (pubk c) (ltk c as)))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((send (enc c access-0 (pubk c) (ltk c as))))
    ((recv
       (enc n1 (enc acess_token value rights k)
         (cat (pubk c) (ltk c as))))
      (send (enc response (cat (pubk c) (ltk c as))))))
  (label 21)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs as) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(defskeleton single_token_simple
  (vars (n2 n1 n1-0 n1-1 n2-0 text)
    (access acess_token value rights response access-0 access-1
      acess_token-0 value-0 rights-0 data) (c as as-0 c-0 as-1 name)
    (k k-0 akey))
  (defstrand client 4 (n1 n1) (n2 n2) (access access)
    (acess_token acess_token) (value value) (rights rights)
    (response response) (c c) (as as) (rs as) (k k))
  (defstrand client 3 (n1 n1-0) (n2 n1) (access access-0)
    (acess_token acess_token) (value value) (rights rights) (c c)
    (as as-0) (rs as) (k k))
  (defstrand authorization_server 2 (n1 n1-1) (access access-1)
    (acess_token acess_token) (value value) (rights rights) (c c-0)
    (as as-1) (k k))
  (defstrand resource_server 2 (n2 n2-0) (acess_token acess_token-0)
    (value value-0) (rights rights-0) (response response) (c c) (rs as)
    (k k-0))
  (defstrand authorization_server 2 (n1 n2-0) (access access)
    (acess_token acess_token-0) (value value-0) (rights rights-0) (c c)
    (as as) (k k-0))
  (precedes ((0 0) (4 0)) ((1 2) (0 1)) ((2 1) (1 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (ltk c as) k)
  (uniq-orig n2)
  (operation encryption-test (displaced 5 0 client 1)
    (enc c access-2 (pubk c) (ltk c rs)) (4 0))
  (traces
    ((send (enc c access (pubk c) (ltk c as)))
      (recv
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (send
        (enc n2 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as))))
      (recv (enc response (cat (pubk c) (ltk c as)))))
    ((send (enc c access-0 (pubk c) (ltk c as-0)))
      (recv
        (enc n1-0 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as-0))))
      (send
        (enc n1 (enc acess_token value rights k)
          (cat (pubk c) (ltk c as)))))
    ((recv (enc c-0 access-1 (pubk c-0) (ltk c-0 as-1)))
      (send
        (enc n1-1 (enc acess_token value rights k)
          (cat (pubk c-0) (ltk c-0 as-1)))))
    ((recv
       (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
         (cat (pubk c) (ltk c as))))
      (send (enc response (cat (pubk c) (ltk c as)))))
    ((recv (enc c access (pubk c) (ltk c as)))
      (send
        (enc n2-0 (enc acess_token-0 value-0 rights-0 k-0)
          (cat (pubk c) (ltk c as))))))
  (label 26)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs as) (n2 n2) (k k) (access access)
        (acess_token acess_token) (value value) (rights rights)
        (response response) (n1 n1))))
  (origs (n2 (0 2))))

(comment "Step limit exceeded--aborting run")
