(comment "CPSA 3.6.9")
(comment "Extracted shapes")

(herald "Grant Negotiation and Authorization Protocol" (limit 100000)
  (comment
    "This protocol allows a piece of software, the client instance, to request delegated authorization to resource servers and to request direct information"))

(comment "CPSA 3.6.9")

(comment "All input read from GNAP_simple_scenario.scm")

(comment "Step count limited to 100000")

(defprotocol single_token_simple basic
  (defrole client
    (vars (c as rs name)
      (access acess_token value access_type response data)
      (n1 n2 n3 n4 text))
    (trace (send (enc c n1 (pubk as))) (recv (enc as n1 n2 (pubk c)))
      (send (enc n2 (pubk as))) (send (enc c access (hash n1 n2)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n2))) (send (enc c n3 (pubk rs)))
      (recv (enc as n3 n4 (pubk c))) (send (enc n3 (pubk rs)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4))) (recv (enc response (hash n3 n4)))))
  (defrole authorization_server
    (vars (c as rs name) (access acess_token value access_type data)
      (n1 n2 text))
    (trace (recv (enc c n1 (pubk as))) (send (enc as n1 n2 (pubk c)))
      (recv (enc n2 (pubk as))) (recv (enc c access (hash n1 n2)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n2)))))
  (defrole resource_server
    (vars (c as rs name) (acess_token value access_type response data)
      (n3 n4 text))
    (trace (recv (enc c n3 (pubk rs))) (send (enc as n3 n4 (pubk c)))
      (recv (enc n3 (pubk rs)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4))) (send (enc response (hash n3 n4))))))

(defskeleton single_token_simple
  (vars (n1 n3 n2 n4 text)
    (access acess_token value access_type response data) (c as rs name))
  (defstrand client 10 (n1 n1) (n2 n2) (n3 n3) (n4 n4) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (neq (c as) (c rs) (as rs))
  (non-orig (privk c) (privk as) (privk rs))
  (uniq-orig n1 n3)
  (traces
    ((send (enc c n1 (pubk as))) (recv (enc as n1 n2 (pubk c)))
      (send (enc n2 (pubk as))) (send (enc c access (hash n1 n2)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n2))) (send (enc c n3 (pubk rs)))
      (recv (enc as n3 n4 (pubk c))) (send (enc n3 (pubk rs)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4))) (recv (enc response (hash n3 n4)))))
  (label 0)
  (unrealized (0 1) (0 4) (0 6) (0 9))
  (origs (n1 (0 0)) (n3 (0 5)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton single_token_simple
  (vars (n1 n3 n4 n4-0 text)
    (access acess_token value access_type response data) (c as rs name))
  (defstrand client 10 (n1 n1) (n2 n4) (n3 n3) (n4 n4-0) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (defstrand authorization_server 5 (n1 n1) (n2 n4) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (c c) (as as) (rs rs))
  (defstrand resource_server 5 (n3 n3) (n4 n4-0)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (precedes ((0 0) (1 0)) ((0 3) (1 3)) ((0 5) (2 0)) ((0 7) (2 2))
    ((0 8) (2 3)) ((1 1) (0 1)) ((1 4) (0 4)) ((2 1) (0 6))
    ((2 4) (0 9)))
  (neq (c as) (c rs) (as rs))
  (non-orig (privk c) (privk as) (privk rs))
  (uniq-orig n1 n3)
  (operation encryption-test (displaced 3 0 client 9)
    (enc
      (enc (enc acess_token-0 value-0 access_type-0 (privk as))
        (pubk rs)) (hash n3 n4-0)) (2 3))
  (traces
    ((send (enc c n1 (pubk as))) (recv (enc as n1 n4 (pubk c)))
      (send (enc n4 (pubk as))) (send (enc c access (hash n1 n4)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))) (send (enc c n3 (pubk rs)))
      (recv (enc as n3 n4-0 (pubk c))) (send (enc n3 (pubk rs)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (recv (enc response (hash n3 n4-0))))
    ((recv (enc c n1 (pubk as))) (send (enc as n1 n4 (pubk c)))
      (recv (enc n4 (pubk as))) (recv (enc c access (hash n1 n4)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))))
    ((recv (enc c n3 (pubk rs))) (send (enc as n3 n4-0 (pubk c)))
      (recv (enc n3 (pubk rs)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (send (enc response (hash n3 n4-0)))))
  (label 563)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n1 n1) (n3 n3) (access access)
        (acess_token acess_token) (value value)
        (access_type access_type) (response response) (n2 n4)
        (n4 n4-0))))
  (origs (n1 (0 0)) (n3 (0 5))))

(defskeleton single_token_simple
  (vars (n1 n3 n4 n4-0 text)
    (access acess_token value access_type response data) (c as rs name))
  (defstrand client 10 (n1 n1) (n2 n4) (n3 n3) (n4 n4-0) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (defstrand resource_server 2 (n3 n1) (n4 n4) (c c) (as as) (rs as))
  (defstrand authorization_server 5 (n1 n1) (n2 n4) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (c c) (as as) (rs rs))
  (defstrand resource_server 5 (n3 n3) (n4 n4-0)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (precedes ((0 0) (1 0)) ((0 0) (2 0)) ((0 3) (2 3)) ((0 5) (3 0))
    ((0 7) (3 2)) ((0 8) (3 3)) ((1 1) (0 1)) ((2 4) (0 4))
    ((3 1) (0 6)) ((3 4) (0 9)))
  (neq (c as) (c rs) (as rs))
  (non-orig (privk c) (privk as) (privk rs))
  (uniq-orig n1 n3)
  (operation encryption-test (displaced 4 0 client 9)
    (enc
      (enc (enc acess_token-0 value-0 access_type-0 (privk as))
        (pubk rs)) (hash n3 n4-0)) (3 3))
  (traces
    ((send (enc c n1 (pubk as))) (recv (enc as n1 n4 (pubk c)))
      (send (enc n4 (pubk as))) (send (enc c access (hash n1 n4)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))) (send (enc c n3 (pubk rs)))
      (recv (enc as n3 n4-0 (pubk c))) (send (enc n3 (pubk rs)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (recv (enc response (hash n3 n4-0))))
    ((recv (enc c n1 (pubk as))) (send (enc as n1 n4 (pubk c))))
    ((recv (enc c n1 (pubk as))) (send (enc as n1 n4 (pubk c)))
      (recv (enc n4 (pubk as))) (recv (enc c access (hash n1 n4)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))))
    ((recv (enc c n3 (pubk rs))) (send (enc as n3 n4-0 (pubk c)))
      (recv (enc n3 (pubk rs)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (send (enc response (hash n3 n4-0)))))
  (label 1217)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n1 n1) (n3 n3) (access access)
        (acess_token acess_token) (value value)
        (access_type access_type) (response response) (n2 n4)
        (n4 n4-0))))
  (origs (n1 (0 0)) (n3 (0 5))))

(defskeleton single_token_simple
  (vars (n1 n3 n4 n4-0 text)
    (access acess_token value access_type response data) (rs c as name))
  (defstrand client 10 (n1 n1) (n2 n4) (n3 n3) (n4 n4-0) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (defstrand authorization_server 5 (n1 n1) (n2 n4) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (c c) (as as) (rs rs))
  (defstrand resource_server 2 (n3 n3) (n4 n4-0) (c c) (as as) (rs rs))
  (defstrand resource_server 5 (n3 n3) (n4 n4-0)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (precedes ((0 0) (1 0)) ((0 3) (1 3)) ((0 5) (2 0)) ((0 5) (3 0))
    ((0 7) (3 2)) ((0 8) (3 3)) ((1 1) (0 1)) ((1 4) (0 4))
    ((2 1) (0 6)) ((3 4) (0 9)))
  (neq (c as) (c rs) (as rs))
  (non-orig (privk rs) (privk c) (privk as))
  (uniq-orig n1 n3)
  (operation encryption-test (displaced 4 0 client 9)
    (enc
      (enc (enc acess_token-0 value-0 access_type-0 (privk as-0))
        (pubk rs)) (hash n3 n4-0)) (3 3))
  (traces
    ((send (enc c n1 (pubk as))) (recv (enc as n1 n4 (pubk c)))
      (send (enc n4 (pubk as))) (send (enc c access (hash n1 n4)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))) (send (enc c n3 (pubk rs)))
      (recv (enc as n3 n4-0 (pubk c))) (send (enc n3 (pubk rs)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (recv (enc response (hash n3 n4-0))))
    ((recv (enc c n1 (pubk as))) (send (enc as n1 n4 (pubk c)))
      (recv (enc n4 (pubk as))) (recv (enc c access (hash n1 n4)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))))
    ((recv (enc c n3 (pubk rs))) (send (enc as n3 n4-0 (pubk c))))
    ((recv (enc c n3 (pubk rs))) (send (enc as n3 n4-0 (pubk c)))
      (recv (enc n3 (pubk rs)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (send (enc response (hash n3 n4-0)))))
  (label 2252)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n1 n1) (n3 n3) (access access)
        (acess_token acess_token) (value value)
        (access_type access_type) (response response) (n2 n4)
        (n4 n4-0))))
  (origs (n1 (0 0)) (n3 (0 5))))

(defskeleton single_token_simple
  (vars (n1 n3 n4 n4-0 text)
    (access acess_token value access_type response data) (c rs as name))
  (defstrand client 10 (n1 n1) (n2 n4) (n3 n3) (n4 n4-0) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (defstrand resource_server 2 (n3 n1) (n4 n4) (c c) (as as) (rs as))
  (defstrand authorization_server 5 (n1 n1) (n2 n4) (access access)
    (acess_token acess_token) (value value) (access_type access_type)
    (c c) (as as) (rs rs))
  (defstrand resource_server 2 (n3 n3) (n4 n4-0) (c c) (as as) (rs rs))
  (defstrand resource_server 5 (n3 n3) (n4 n4-0)
    (acess_token acess_token) (value value) (access_type access_type)
    (response response) (c c) (as as) (rs rs))
  (precedes ((0 0) (1 0)) ((0 0) (2 0)) ((0 3) (2 3)) ((0 5) (3 0))
    ((0 5) (4 0)) ((0 7) (4 2)) ((0 8) (4 3)) ((1 1) (0 1))
    ((2 4) (0 4)) ((3 1) (0 6)) ((4 4) (0 9)))
  (neq (c as) (c rs) (as rs))
  (non-orig (privk c) (privk rs) (privk as))
  (uniq-orig n1 n3)
  (operation encryption-test (displaced 5 0 client 9)
    (enc
      (enc (enc acess_token-0 value-0 access_type-0 (privk as-0))
        (pubk rs)) (hash n3 n4-0)) (4 3))
  (traces
    ((send (enc c n1 (pubk as))) (recv (enc as n1 n4 (pubk c)))
      (send (enc n4 (pubk as))) (send (enc c access (hash n1 n4)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))) (send (enc c n3 (pubk rs)))
      (recv (enc as n3 n4-0 (pubk c))) (send (enc n3 (pubk rs)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (recv (enc response (hash n3 n4-0))))
    ((recv (enc c n1 (pubk as))) (send (enc as n1 n4 (pubk c))))
    ((recv (enc c n1 (pubk as))) (send (enc as n1 n4 (pubk c)))
      (recv (enc n4 (pubk as))) (recv (enc c access (hash n1 n4)))
      (send
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n1 n4))))
    ((recv (enc c n3 (pubk rs))) (send (enc as n3 n4-0 (pubk c))))
    ((recv (enc c n3 (pubk rs))) (send (enc as n3 n4-0 (pubk c)))
      (recv (enc n3 (pubk rs)))
      (recv
        (enc
          (enc (enc acess_token value access_type (privk as)) (pubk rs))
          (hash n3 n4-0))) (send (enc response (hash n3 n4-0)))))
  (label 4982)
  (parent 0)
  (unrealized)
  (shape)
  (maps
    ((0)
      ((c c) (as as) (rs rs) (n1 n1) (n3 n3) (access access)
        (acess_token acess_token) (value value)
        (access_type access_type) (response response) (n2 n4)
        (n4 n4-0))))
  (origs (n1 (0 0)) (n3 (0 5))))
